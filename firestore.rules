rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isStudent() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isOwner(userId);
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Videos collection (read-only for students)
    match /videos/{videoId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Assignments collection (read-only for students)
    match /assignments/{assignmentId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Submissions collection
    match /submissions/{submissionId} {
      allow read: if isAuthenticated() && 
        (isOwner(resource.data.studentId) || isAdmin());
      allow create: if isStudent() && 
        isOwner(request.resource.data.studentId);
      allow update: if (isOwner(resource.data.studentId) && 
        resource.data.status != 'approved') || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Chats collection
    match /chats/{chatId} {
      allow read, write: if isAuthenticated() && 
        isOwner(resource.data.userId);
      allow read: if isAdmin();
    }
    
    // LiveSessions collection
    match /liveSessions/{sessionId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Progress collection
    match /progress/{progressId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // Certificates collection
    match /certificates/{certificateId} {
      allow read: if true; // Public for verification
      allow write: if isAdmin();
    }
    
    // AdminLogs collection
    match /adminLogs/{logId} {
      allow read, write: if isAdmin();
    }
    
    // ForumPosts collection - Only if using custom forum
    match /forumPosts/{postId} {
      allow read: if isAuthenticated();
      allow create: if isStudent() && 
        isOwner(request.resource.data.authorId);
      allow update: if isOwner(resource.data.authorId) || isAdmin();
      allow delete: if isOwner(resource.data.authorId) || isAdmin();
    }
    
    // Legacy collections (for backward compatibility)
    match /profiles/{profileId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(resource.data.userId) || isAdmin();
    }
    
    match /todos/{todoId} {
      allow read, write: if isOwner(resource.data.userId);
    }
    
    match /messages/{messageId} {
      allow read, write: if isAuthenticated();
    }
  }
} 